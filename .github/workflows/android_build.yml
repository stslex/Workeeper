name: Android CI/CD
on:
  push:
    branches: [ master ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

jobs:

  build:
    name: Build project
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
      - run: |
          echo "${{ secrets.KEYSTORE }}" > keystore.jks.asc
          gpg -d --passphrase "${{ secrets.KEYSTORE_PASSPHRASE }}" --batch keystore.jks.asc > keystore.jks

      - name: set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Configure Keystore
        env:
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
        run: |
          echo "storeFile=keystore.jks" >> keystore.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> keystore.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> keystore.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> keystore.properties

      - name: Create Google Services Config file
        env:
          GOOGLE_SERVICES_JSON_STORE: ${{ secrets.GOOGLE_SERVICES_JSON_STORE }}
        run: |
          echo "$GOOGLE_SERVICES_JSON_STORE" > app/store/google-services.json.b64
          base64 -d -i app/store/google-services.json.b64 > app/store/google-services.json

      - name: Create Google Services DEV Config file
        env:
          GOOGLE_SERVICES_JSON_DEV: ${{ secrets.GOOGLE_SERVICES_JSON_DEV }}
        run: |
          echo "$GOOGLE_SERVICES_JSON_DEV" > app/dev/google-services.json.b64
          base64 -d -i app/dev/google-services.json.b64 > app/dev/google-services.json

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run detekt
        run: ./gradlew detekt --full-stacktrace

      - name: Run Android Lint
        run: ./gradlew lintDebug --full-stacktrace

      - name: Build with Gradle
        run: ./gradlew build -x test --full-stacktrace

      - name: Junit tests with Gradle
        run: ./gradlew testDebugUnitTest --full-stacktrace

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            **/build/test-results/test*.xml
            **/build/test-results/**/*.xml
          commit: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Upload detekt reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: detekt-reports
          path: |
            **/build/reports/detekt/
            detekt.yml
          retention-days: 30

      - name: Upload lint reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-reports
          path: |
            **/build/reports/lint-results-*.html
            **/build/reports/lint-results-*.xml
            lint.xml
          retention-days: 30

      - name: Annotate PR with lint results
        if: github.event_name == 'pull_request' && always()
        uses: yutailang0119/action-android-lint@v4
        with:
          report-path: "**/build/reports/lint-results-*.xml"