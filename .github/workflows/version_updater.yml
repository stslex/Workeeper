name: Android Version Update

on:
  workflow_dispatch:
    inputs:
      channel:
        description: "Release channel (beta or release)"
        required: false
        default: "release"
        type: choice
        options:
          - beta
          - release
      bump:
        description: "Bump versionName/Code before tagging"
        required: false
        default: "false"
        type: choice
        options:
          - "false"
          - "true"

permissions:
  contents: write

jobs:
  deploy_beta:

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update Version
        if: ${{ github.event.inputs.bump == 'true' }}
        run: bash ./.github/scripts/update_versions.sh

      - name: Read version from toml
        id: version
        run: |
          VERSION_NAME=$(awk -F '"' '/versionName = "/{print $2}' gradle/libs.versions.toml)
          VERSION_CODE=$(awk -F '"' '/versionCode = "/{print $2}' gradle/libs.versions.toml)
          echo "name=$VERSION_NAME" >> "$GITHUB_OUTPUT"
          echo "code=$VERSION_CODE" >> "$GITHUB_OUTPUT"

      - name: Generate changelogs
        env:
          VERSION_CODE: ${{ steps.version.outputs.code }}
        run: |
          # For version updater, use the last tag as from_tag
          FROM_TAG=$(git describe --tags --abbrev=0 2>/dev/null || git rev-list --max-parents=0 HEAD)
          TO_TAG="${{ github.sha }}"

          # Generate Play Store changelog
          bash ./.github/scripts/generate_changelog.sh "$FROM_TAG" "$TO_TAG" play "$VERSION_CODE"

      - name: Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          if [ "${{ github.event.inputs.channel }}" = "beta" ]; then
            git commit -m "release(beta): v${{ steps.version.outputs.name }} (code ${{ steps.version.outputs.code }})" || echo "No changes to commit"
            TAG_NAME="beta-v${{ steps.version.outputs.name }}"
          else
            git commit -m "release: v${{ steps.version.outputs.name }} (code ${{ steps.version.outputs.code }})" || echo "No changes to commit"
            TAG_NAME="release-v${{ steps.version.outputs.name }}"
          fi
          # Create an annotated tag for this release
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "Tag $TAG_NAME already exists; skipping create"
          else
            git tag -a "$TAG_NAME" -m "Release $TAG_NAME"
          fi

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PUSH_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
